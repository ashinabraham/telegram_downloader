name: PR Testing with Alpine Docker

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Alpine Docker image for testing
      run: |
        docker build -t telegram-downloader-test:alpine -f Dockerfile.alpine .
        
    - name: Run tests in Alpine container
      run: |
        docker run --rm telegram-downloader-test:alpine python -m pytest tests/ -v --cov=src --cov-report=term-missing
        
    - name: Run linting checks in Alpine
      run: |
        docker run --rm telegram-downloader-test:alpine python -m flake8 src/ --max-line-length=120 --ignore=E501,W503
        docker run --rm telegram-downloader-test:alpine python -m black --check src/ tests/
        
    - name: Check code formatting in Alpine
      run: |
        docker run --rm telegram-downloader-test:alpine python -c "
        import ast
        import os
        def check_syntax():
            for root, dirs, files in os.walk('src'):
                for file in files:
                    if file.endswith('.py'):
                        filepath = os.path.join(root, file)
                        try:
                            with open(filepath, 'r') as f:
                                ast.parse(f.read())
                        except SyntaxError as e:
                            print(f'Syntax error in {filepath}: {e}')
                            exit(1)
        check_syntax()
        print('All Python files have valid syntax!')
        " 